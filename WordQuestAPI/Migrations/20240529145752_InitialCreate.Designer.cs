// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WordQuestAPI.Models;

#nullable disable

namespace WordQuestAPI.Migrations
{
    [DbContext(typeof(WordQuestContext))]
    [Migration("20240529145752_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WordQuestAPI.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("course_description");

                    b.Property<int>("CourseLevel")
                        .HasColumnType("int")
                        .HasColumnName("course_level");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("course_name");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_date");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.HasKey("CourseId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("WordQuestAPI.Models.CourseWords", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<int>("WordId")
                        .HasColumnType("int")
                        .HasColumnName("word_id");

                    b.HasKey("CourseId", "WordId");

                    b.HasIndex("WordId");

                    b.ToTable("course_words");
                });

            modelBuilder.Entity("WordQuestAPI.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("group_name");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WordQuestAPI.Models.GroupCourses", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.HasKey("GroupId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("group_courses");
                });

            modelBuilder.Entity("WordQuestAPI.Models.GroupUsers", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("group_users");
                });

            modelBuilder.Entity("WordQuestAPI.Models.LearnedWord", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("WordId")
                        .HasColumnType("int")
                        .HasColumnName("word_id");

                    b.Property<int>("LearningStage")
                        .HasColumnType("int")
                        .HasColumnName("learning_stage");

                    b.HasKey("UserId", "WordId");

                    b.HasIndex("WordId");

                    b.ToTable("learned_words");
                });

            modelBuilder.Entity("WordQuestAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_email");

                    b.Property<int>("UserLevel")
                        .HasColumnType("int")
                        .HasColumnName("user_level");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_name");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_password");

                    b.Property<int>("UserXP")
                        .HasColumnType("int")
                        .HasColumnName("user_xp");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WordQuestAPI.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("word_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WordId"));

                    b.Property<string>("EnWord")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("en_word");

                    b.Property<string>("FrWord")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fr_word");

                    b.HasKey("WordId");

                    b.ToTable("words");
                });

            modelBuilder.Entity("WordQuestAPI.Models.CourseWords", b =>
                {
                    b.HasOne("WordQuestAPI.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordQuestAPI.Models.Word", null)
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WordQuestAPI.Models.GroupCourses", b =>
                {
                    b.HasOne("WordQuestAPI.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordQuestAPI.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WordQuestAPI.Models.GroupUsers", b =>
                {
                    b.HasOne("WordQuestAPI.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordQuestAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WordQuestAPI.Models.LearnedWord", b =>
                {
                    b.HasOne("WordQuestAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordQuestAPI.Models.Word", null)
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
